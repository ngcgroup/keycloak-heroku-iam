apiVersion: v1
kind: Namespace
metadata:
  name: iam
  labels:
    cert-manager-tls: kubed
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
    - name: "8443"
      port: 8443
      targetPort: 8443
  selector:
    com.bhn.service: keycloak
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak-discovery
spec:
  clusterIP: None
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: http
    - name: "8443"
      port: 8443
      targetPort: 8443
  selector:
    com.bhn.service: keycloak
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keycloak
spec:
  replicas: 1
  serviceName: keycloak-discovery
  selector:
    matchLabels:
      com.bhn.service: keycloak
   
  template:
    metadata:
      name: keycloak-template
      labels:
        com.bhn.service: keycloak
    spec:
      restartPolicy: Always
      serviceAccountName: keycloak
      containers:
        - image: 982306614752.dkr.ecr.us-west-2.amazonaws.com/keycloak:19.0.0
          imagePullPolicy: Always
          name: keycloak
          volumeMounts:
            - name: cache-owners
              subPath: cache-owners.cli
              mountPath: /opt/jboss/startup-scripts/cache-owners.cli
            - name: application-keystore
              readOnly: true
              mountPath: /opt/jboss/keycloak/standalone/configuration/application.keystore
              subPath: "application.keystore"
          env:
            # - name: DB_ADDR
            #   value: "example-cluster-postgres"
            # - name: DB_PORT
            #   value: "5432"
            # - name: DB_DATABASE
            #   value: "postgres"
            # - name: DB_USER
            #   value: "postgres"
            # - name: DB_PASSWORD 
            #   value: "thepasswordgoeshere"
            #- name: KEYCLOAK_LOGLEVEL
            #  value: "DEBUG"
            #- name: ROOT_LOGLEVEL
            #  value: "DEBUG"
            - name: CACHE_OWNERS
              value: "2"
            - name: KEYCLOAK_STATISTICS
              value: "all"
            - name: KUBERNETES_LABELS
              value: app=keycloak
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: JGROUPS_DISCOVERY_PROTOCOL
              value: kubernetes.KUBE_PING
            - name: JGROUPS_DISCOVERY_PROPERTIES
              value: "namespace=$(KUBERNETES_NAMESPACE)"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: JAVA_OPTS
              value: >-
                -server
                -Djava.net.preferIPv4Stack=true
                -Djava.awt.headless=true
                -Djboss.default.jgroups.stack=kubernetes
                -Djboss.node.name=$(POD_NAME)
                -Djboss.tx.node.id=$(POD_NAME)
                -Djboss.site.name=$(KUBERNETES_NAMESPACE)
                -Dkeycloak.profile.feature.upload_scripts=enabled
                -Dkeycloak.profile.feature.scripts=enabled
          envFrom:
            - configMapRef:
                name: env-bindings-cm
          resources:
            requests:
              memory: 100M
              cpu: 250m
            # limits:
            #   memory: 1G
            #   cpu: 500m
          livenessProbe:
            httpGet:
              path: auth/
              port: http
            initialDelaySeconds: 140
          readinessProbe:
            httpGet:
              path: auth/realms/master
              port: http
            initialDelaySeconds: 140
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8443
              protocol: TCP              
            - name: metrics
              containerPort: 9990
      volumes:
        - name: cache-owners
          configMap:
            name: cache-owners
        - name: application-keystore
          secret:
            secretName: keycloak-keystore
            items:
              - key: application.keystore
                path: application.keystore
            defaultMode: 420            
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
spec:
  tls:
  - secretName: tls-cert
    hosts:
    - iam.bhn.technology
  rules:
    - host: iam.bhn.technology
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: keycloak
              port:
                number: 8443
        - path: /readme-webhook
          pathType: Exact
          backend:
            service:
              name: readme-bridge-service
              port:
                number: 8000
